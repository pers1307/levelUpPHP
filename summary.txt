1. Ссылки на элементы массивов
2. Проверка типов входящих данных
3. Наследование, повторное использование кода (parent)
4. static создание себе подобного объекта
5. Использовать исключения, а не коды ошибок.
6. Последний catch с дефолтным Exeption не должен никогда вызываться! (В идеале)
7. Удобно передавать исключение вверх бросая throw в catch.
8. Все объекты передаются по ссылке.
9. Можно добавлять функционал в методы при помощи функций обратного вызова.
10. Классам подключенным через use можно давать алиасы (use pers1307\blog\Ret as bRet)
11. __autoload для подключения классов, которые будут использоваться в коде.
12. class_exists
13. Reflection API для анализа экземпляров класса. (стр 114)
14. Обязанность каждого класса должна быть единичной.
15. Для документации удобно использовать phpDocumentor (http://www.phpdoc.org/)
    установка через Composer. Прописать в командной строке
    (vendor\bin\phpdoc -d ./ForDoc/ -t ./docs)
16. Для загрузки PHPUnit composer require "phpunit/phpunit=4.8.*"
17. Для запуска тестирования использовать команду: php phpunit.phar CalculatorTest.php
18. Но лучше, поместить все тесты к отдельный каталог и запустить их разом используя
    команду: php phpunit.phar test/
19.